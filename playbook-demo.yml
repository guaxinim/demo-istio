---
- hosts: localhost
  name: "Execução da Demo do Istio"
  connection: local

  tasks:

    - name: Abrindo URL Grafana
      shell: open "$(minishift openshift service grafana -u)/d/1/istio-dashboard?refresh=5s&orgId=1"

    - name: Abrindo URL de Workload dos serviços
      shell: open "$(minishift openshift service grafana -u)/d/UbsSZTDik/istio-workload-dashboard?refresh=5s&orgId=1"

    - name: Abrindo métricas customizadas
      shell: open "$(minishift openshift service prometheus -u)/graph?g0.range_input=5m&g0.expr=&g0.tab=0"

    - name: Abrindo métricas customizadas
      shell: ./istio-1.0.0/bin/istioctl create -f istio-tutorial/istiofiles/recommendation_requestcount.yml -n istio-system | echo "RequestCount ja existe"

    - pause:
        prompt: istio_requests_total{destination_service="recommendation.tutorial.svc.cluster.local"}

    - name: Enviando requests ao serviço Customer
      shell: curl customer-tutorial.$(minishift ip).nip.io
      with_sequence: start=0 end=50

    - pause:
        prompt: "====================  Tracing"

    - name: Abrindo Jaeger
      shell: minishift openshift service tracing --in-browser

    - pause:
        prompt: "====================  Deploy de nova versão Recommendation-V2"

    - name: Alterando RecommendationVerticle.java para nova versão
      shell: sed -i -e 's/recommendation v1/recommendation v2/g' istio-tutorial/recommendation/java/vertx/src/main/java/com/redhat/developer/demos/recommendation/RecommendationVerticle.java

    - name: Compilando o sistema recommendation
      shell: cd istio-tutorial;mvn clean package -f recommendation/java/vertx

    - name: Criando aplicação recommendation v2
      shell: oc new-app -l app=recommendation,version=v2 --name=recommendation-v2 --context-dir=recommendation/java/vertx -e JAEGER_SERVICE_NAME=recommendation JAEGER_ENDPOINT=http://jaeger-collector.istio-system.svc:14268/api/traces JAEGER_PROPAGATION=b3 JAEGER_SAMPLER_TYPE=const JAEGER_SAMPLER_PARAM=1 JAVA_OPTIONS='-Xms128m -Xmx256m -Djava.net.preferIPv4Stack=true' fabric8/s2i-java~https://github.com/guaxinim/istio-tutorial -o yaml  > recommendation-v2.yml

    - name: Gerando nova versão do projeto recommendation
      shell: ./istio-1.0.0/bin/istioctl kube-inject -f recommendation-v2.yml | oc apply -f -

    - name: Cancelando build v2
      shell: oc cancel-build svc/recommendation-v2

    - name: Deletando build v2
      shell: oc delete svc/recommendation-v2

    - name: Iniciando build v2 a partir do binário
      shell: cd istio-tutorial; oc start-build recommendation-v2 --from-dir=. --follow

    - name: Aguardando build recommendation v2
      shell: oc get po | grep -v build | grep Running
      register: recv2
      until: recv2.stdout.find("recommendation-v2") != -1
      retries: 30
      delay: 30

    - name: Testando recommendation v2
      shell: RESULT=$(curl customer-tutorial.$(minishift ip).nip.io);echo $RESULT
      register: rectest
      until: rectest.stdout.find("naoexiste") != -1
      retries: 30
      delay: 3

    - pause:

    - name: Escalando recommendation-v2 para 2 replicas
      shell: oc scale --replicas=2 deployment/recommendation-v2

    - name: Testando recommendation v2
      shell: RESULT=$(curl customer-tutorial.$(minishift ip).nip.io);echo $RESULT
      register: rectest
      until: rectest.stdout.find("naoexiste") != -1
      retries: 20
      delay: 2

    - pause:

    - name: Voltando recommendation-v2 para 1 replica
      shell: oc scale --replicas=1 deployment/recommendation-v2

    - pause:
        prompt: "Mudando todos os usuários para a versão 2 de Recommendation"











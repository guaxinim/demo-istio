---
- hosts: localhost
  name: "Execução da Demo do Istio"
  connection: local
  vars:
    istio_version: 1.0.3
    kiali_version: v0.9.1

  tasks:

    - name: Set MacOSX facts
      set_fact:
        nav: open
      when: ansible_distribution == "MacOSX"

    - name: Set Linux facts
      set_fact:
        nav: firefox
      when: ansible_distribution != "MacOSX"

    - name: Get minishift ip
      shell: minishift ip
      register: minishift_ip

    - name: Abrindo Kiali
      shell: "{{ nav }} $(minishift openshift service kiali -u)"

    - name: Abrindo URL Grafana
      shell: "{{ nav }} $(minishift openshift service grafana -u)/d/1/istio-dashboard?refresh=5s&orgId=1"

    - name: Abrindo URL de Workload dos serviços
      shell: "{{ nav }} $(minishift openshift service grafana -u)/d/UbsSZTDik/istio-workload-dashboard?refresh=5s&orgId=1"

    - name: Abrindo métricas customizadas
      shell: '{{ nav }} $(minishift openshift service prometheus -u)/graph?g0.range_input=5m\&g0.expr=\&g0.tab=0'

    - name: Criando recommendation request no istio
      shell: ./istio-{{ istio_version }}/bin/istioctl create -f istio-tutorial/istiofiles/recommendation_requestcount.yml -n istio-system | echo "RequestCount ja existe"

    - pause:
        prompt: |
          ======================================================
          Copy the following content into prometheus query field:

          istio_requests_total{destination_service="recommendation.tutorial.svc.cluster.local"}

          PRESS ENTER TO CONTINUE
          ======================================================

    - name: Enviando requests ao serviço Customer
      shell: curl customer-tutorial.{{ minishift_ip.stdout }}.nip.io
      with_sequence: start=0 end=50

    - pause:
        prompt: |
          ======================================================
          Tracing

          PRESS ENTER TO CONTINUE
          ======================================================

    - name: Abrindo Jaeger
      shell: '{{ nav }} $(minishift openshift service tracing -u)'

    - pause:
        prompt: |
          ======================================================
          Now execute the following command: 
          
          curl customer-tutorial.{{ minishift_ip.stdout }}.nip.io

          PRESS ENTER TO CONTINUE
          ======================================================
        
    - pause:
        prompt: |
          ======================================================
          Deploy Recommendation-V2

          PRESS ENTER TO CONTINUE
          ======================================================

    - name: Alterando RecommendationVerticle.java para nova versão
      shell: sed -i -e 's/recommendation v1/recommendation v2/g' istio-tutorial/recommendation/java/vertx/src/main/java/com/redhat/developer/demos/recommendation/RecommendationVerticle.java

    - name: Compilando o sistema recommendation
      shell: cd istio-tutorial;mvn clean package -f recommendation/java/vertx

    - name: Change project
      shell: oc project tutorial

    - name: Criando aplicação recommendation v2
      shell: oc new-app -n tutorial -l app=recommendation,version=v2 --name=recommendation-v2 --context-dir=recommendation/java/vertx -e JAEGER_SERVICE_NAME=recommendation JAEGER_ENDPOINT=http://jaeger-collector.istio-system.svc:14268/api/traces JAEGER_PROPAGATION=b3 JAEGER_SAMPLER_TYPE=const JAEGER_SAMPLER_PARAM=1 JAVA_OPTIONS='-Xms128m -Xmx256m -Djava.net.preferIPv4Stack=true' fabric8/s2i-java~https://github.com/guaxinim/istio-tutorial -o yaml  > recommendation-v2.yml

    - name: Gerando nova versão do projeto recommendation
      shell: ./istio-{{ istio_version }}/bin/istioctl kube-inject -f recommendation-v2.yml -n tutorial | oc apply -f -

    - name: Cancelando build v2
      shell: oc cancel-build bc/recommendation-v2 -n tutorial

    - name: Deletando svc v2
      shell: oc delete svc/recommendation-v2 -n tutorial || echo "svc não existe"

    - name: Iniciando build v2 a partir do binário
      shell: cd istio-tutorial; oc project tutorial && oc start-build recommendation-v2 --from-dir=. --follow

    - name: Aguardando build recommendation v2
      shell: oc get po -n tutorial | grep -v build | grep Running
      register: recv2
      until: recv2.stdout.find("recommendation-v2") != -1
      retries: 30
      delay: 30

    - name: Testando recommendation v2
      shell: curl customer-tutorial.{{ minishift_ip.stdout }}.nip.io
      register: rectest
      until: rectest.stdout.find("recommendation v2") != -1
      retries: 30
      delay: 2

    - pause:
        prompt: |
          ======================================================
          Now execute the following command: 

          while [ true ]; do curl http://customer-tutorial.{{ minishift_ip.stdout }}.nip.io/; sleep 1; echo; done

          PRESS ENTER TO CONTINUE
          ======================================================

    - name: Escalando recommendation-v2 para 2 replicas
      shell: oc scale --replicas=2 dc/recommendation-v2 -n tutorial

    - pause:
        prompt: |
          ======================================================
          Voltando para 1 replica

          PRESS ENTER TO CONTINUE
          ======================================================

    - name: Voltando recommendation-v2 para 1 replica
      shell: oc scale --replicas=1 dc/recommendation-v2 -n tutorial

    - pause:
        prompt: |
          ======================================================
          Mudando todos os usuários para a versão 2 de Recommendation

          PRESS ENTER TO CONTINUE
          ======================================================

    - name: Criando regra no istio de mudança para recommendation-v2
      shell: ./istio-{{ istio_version }}/bin/istioctl create -f istio-tutorial/istiofiles/destination-rule-recommendation-v1-v2.yml -n tutorial | echo "regra recommendation-v1-v2 ja existe"

    - name: Criando serviço recommendation-v2
      shell: ./istio-{{ istio_version }}/bin/istioctl create -f istio-tutorial/istiofiles/virtual-service-recommendation-v2.yml -n tutorial | echo "servico-v2 ja existe"

    - pause:
        prompt: |
          ======================================================
          Now execute the following command: 
          
          while [ true ]; do curl http://customer-tutorial.{{ minishift_ip.stdout }}.nip.io/; sleep 1; echo; done

          PRESS ENTER TO CONTINUE
          ======================================================

    - pause:
        prompt: |
          ======================================================
          Mudando todos os usuários para a versão 1 de Recommendation

          PRESS ENTER TO CONTINUE
          ======================================================

    - name: Sobrescrevendo regra no istio de mudança para a versao 1
      shell: ./istio-{{ istio_version }}/bin/istioctl replace -f istio-tutorial/istiofiles/virtual-service-recommendation-v1.yml -n tutorial | echo "regra-v1 nao encontrada"

    - pause:
        prompt: |
          ======================================================
          Now execute the following command: 
          
          while [ true ]; do curl http://customer-tutorial.{{ minishift_ip.stdout }}.nip.io/; sleep 1; echo; done

          PRESS ENTER TO CONTINUE
          ======================================================

    - pause:
        prompt: |
          ======================================================
          Now execute the following command: 
          
          Mudando os usuários para versão 1 e versão 2 novamente

          PRESS ENTER TO CONTINUE
          ======================================================

    - name: Removendo a regra de roteamento
      shell: ./istio-{{ istio_version }}/bin/istioctl delete -f istio-tutorial/istiofiles/virtual-service-recommendation-v1.yml -n tutorial | echo "recommendation-v1 nao encontrada"

    - pause:
        prompt: |
          ======================================================
          Canary Release
          
          90% -> v1
          10% -> v2

          PRESS ENTER TO CONTINUE
          ======================================================

    - name: Removendo serviço v2
      shell: oc scale --replicas=0 dc/recommendation-v2 -n tutorial

    - name: Criando regra recommendation-v2
      shell: ./istio-{{ istio_version }}/bin/istioctl create -f istio-tutorial/istiofiles/virtual-service-recommendation-v1_and_v2.yml -n tutorial | echo "regra-v2 ja existe"

    - name: Habilitando serviço v2
      shell: oc scale --replicas=1 dc/recommendation-v2 -n tutorial

    - pause:
        prompt: |
          ======================================================
          Now execute the following command: 
          
          while [ true ]; do curl http://customer-tutorial.{{ minishift_ip.stdout }}.nip.io/; sleep 1; echo; done

          PRESS ENTER TO CONTINUE
          ======================================================

    - pause:
        prompt: |
          ======================================================       
          Canary Release
          
          75% -> v1
          25% -> v2

          PRESS ENTER TO CONTINUE
          ======================================================

    - name: Criando regra recommendation-v2
      shell: ./istio-{{ istio_version }}/bin/istioctl replace -f istio-tutorial/istiofiles/virtual-service-recommendation-v1_and_v2_75_25.yml -n tutorial | echo "regra-v2 ja existe"

    - pause:
        prompt: |
          ======================================================
          Now execute the following command: 
          
          while [ true ]; do curl http://customer-tutorial.{{ minishift_ip.stdout }}.nip.io/; sleep 1; echo; done

          PRESS ENTER TO CONTINUE
          ======================================================

    - pause:
        prompt: |
          ======================================================
          Removendo regras

          PRESS ENTER TO CONTINUE
          ======================================================

    - name: Removendo regra recommendation-v2
      shell: ./istio-{{ istio_version }}/bin/istioctl delete -f istio-tutorial/istiofiles/virtual-service-recommendation-v1_and_v2_75_25.yml -n tutorial | echo "regra-v2 ja existe"

    - name: Removendo destino recommendation-v2
      shell: ./istio-{{ istio_version }}/bin/istioctl delete -f istio-tutorial/istiofiles/destination-rule-recommendation-v1-v2.yml -n tutorial | echo "regra-v2 ja existe"

    - name: Clean-up
      shell: ./istio-tutorial/scripts/clean.sh

    - pause:
        prompt: |
          ======================================================
          Smart Routing baseado no User-Agent (Canary Deployment)
          
          Firefox = v1
          Safari  = v2

          PRESS ENTER TO CONTINUE
          ======================================================

    - name: Criando regra - recommendation v1 para todos os usuarios"
      shell: ./istio-{{ istio_version }}/bin/istioctl create -f istio-tutorial/istiofiles/destination-rule-recommendation-v1-v2.yml -n tutorial | echo "regra-v1-v2 ja existe"

    - name: Criando virtual service recommendation-v1
      shell: ./istio-{{ istio_version }}/bin/istioctl create -f istio-tutorial/istiofiles/virtual-service-recommendation-v1.yml -n tutorial | echo "service-v1 ja existe"

    - name: Criando regra Safari Users para recommendation-v2
      shell: ./istio-{{ istio_version }}/bin/istioctl replace -f istio-tutorial/istiofiles/virtual-service-safari-recommendation-v2.yml -n tutorial | echo "regra-v2 ja existe"

    - pause:
        prompt: |
          ======================================================
          Now execute the following command: 
          
          curl -A Safari customer-tutorial.{{ minishift_ip.stdout }}.nip.io
          curl -A Firefox customer-tutorial.{{ minishift_ip.stdout }}.nip.io

          PRESS ENTER TO CONTINUE
          ======================================================

    - pause:
        prompt: |
          ======================================================          
          Configurando usuários mobile para a versão 2

          PRESS ENTER TO CONTINUE
          ======================================================

    - name: Removendo regra do Safari
      shell: ./istio-{{ istio_version }}/bin/istioctl delete -f istio-tutorial/istiofiles/virtual-service-safari-recommendation-v2.yml -n tutorial

    - name: Criando regra mobile para versão 2
      shell: ./istio-{{ istio_version }}/bin/istioctl create -f istio-tutorial/istiofiles/virtual-service-mobile-recommendation-v2.yml -n tutorial

    - pause:
        prompt: |
          ======================================================
          Now execute the following command: 
          
          curl -A "Mozilla/5.0 (iPhone; U; CPU iPhone OS 4(KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5" customer-tutorial.{{ minishift_ip.stdout }}.nip.io
          curl customer-tutorial.{{ minishift_ip.stdout }}.nip.io

          PRESS ENTER TO CONTINUE
          ======================================================

    - name: Clean-up
      shell: ./istio-tutorial/scripts/clean.sh

    # - pause:
    #     prompt: |
    #       ======================================================
    #       Controle de acesso baseado em whitelist, preference somente recebe requisições de recommendation (requests de customer dá erro 404)

    #       PRESS ENTER TO CONTINUE
    #       ======================================================

    # - name: Criando regra whitelist
    #   shell: ./istio-{{ istio_version }}/bin/istioctl create -f istio-tutorial/istiofiles/acl-whitelist.yml -n tutorial

    # - pause:
    #     prompt: "curl customer-tutorial.{{ minishift_ip.stdout }}.nip.io"

    # - pause:
    #     prompt: "==================== Controle de acesso baseado em blacklist, customer vai estar na blacklist de recommendation (requests de customer dá erro 403)"

    # - name: Removendo regra whitelist
    #   shell: ./istio-{{ istio_version }}/bin/istioctl delete -f istio-tutorial/istiofiles/acl-whitelist.yml -n tutorial

    # - name: Criando regra blacklist
    #   shell: ./istio-{{ istio_version }}/bin/istioctl create -f istio-tutorial/istiofiles/acl-blacklist.yml -n tutorial

    # - pause:
    #     prompt: "curl customer-tutorial.{{ minishift_ip.stdout }}.nip.io"

    # - name: Removendo regra blacklist
    #   shell: ./istio-{{ istio_version }}/bin/istioctl delete -f istio-tutorial/istiofiles/acl-blacklist.yml -n tutorial

    # - pause:
    #     prompt: "==================== Rate Limiting - Limitando a quantidade de acessos concorrentes"

    # - name: Criando limit handler
    #   shell: ./istio-{{ istio_version }}/bin/istioctl create -f istio-tutorial/istiofiles/recommendation_rate_limit_handler.yml -n tutorial

    # - name: Criando regra de cota
    #   shell: ./istio-{{ istio_version }}/bin/istioctl create -f istio-tutorial/istiofiles/rate_limit_rule.yml -n tutorial

    # - pause:
    #     prompt: "./istio-tutorial/scripts/run.sh"

    # - name: Removendo limit rule
    #   shell: ./istio-{{ istio_version }}/bin/istioctl delete -f istio-tutorial/istiofiles/rate_limit_rule.yml -n tutorial

    # - name: Removendo limit handler
    #   shell: ./istio-{{ istio_version }}/bin/istioctl delete -f istio-tutorial/istiofiles/recommendation_rate_limit_handler.yml -n tutorial

    - name: Clean-up
      shell: ./istio-tutorial/scripts/clean.sh

    - pause:
        prompt: |
          ======================================================
          Circuit Breaking

          PRESS ENTER TO CONTINUE
          ======================================================

    - name: Alterando RecommendationVerticle.java para habilitar handler de timeout
      shell: sed -i -e 's/\/\/        router.get("\/").handler(this::timeout);/        router.get("\/").handler(this::timeout);/g' istio-tutorial/recommendation/java/vertx/src/main/java/com/redhat/developer/demos/recommendation/RecommendationVerticle.java

    - name: Compilando o sistema recommendation
      shell: cd istio-tutorial;mvn clean package -f recommendation/java/vertx

#    - name: Criando aplicação recommendation v2
#      shell: oc new-app -l app=recommendation,version=v2 --name=recommendation-v2 --context-dir=recommendation/java/vertx -e JAEGER_SERVICE_NAME=recommendation JAEGER_ENDPOINT=http://jaeger-collector.istio-system.svc:14268/api/traces JAEGER_PROPAGATION=b3 JAEGER_SAMPLER_TYPE=const JAEGER_SAMPLER_PARAM=1 JAVA_OPTIONS='-Xms128m -Xmx256m -Djava.net.preferIPv4Stack=true' fabric8/s2i-java~https://github.com/guaxinim/istio-tutorial -o yaml  > recommendation-v2.yml

#    - name: Gerando nova versão do projeto recommendation
#      shell: istioctl kube-inject -f recommendation-v2.yml | oc apply -f -

#    - name: Cancelando build v2
#      shell: oc cancel-build bc/recommendation-v2

#    - name: Deletando service v2
#      shell: oc delete svc/recommendation-v2

    - name: Iniciando build v2 a partir do binário
      shell: cd istio-tutorial; oc start-build recommendation-v2 --from-dir=. --follow -n tutorial

    - name: Criando destination rule
      shell: ./istio-{{ istio_version }}/bin/istioctl create -f istio-tutorial/istiofiles/destination-rule-recommendation-v1-v2.yml -n tutorial || echo "Destination rule already exists"

    - name: Criando virtual service
      shell: ./istio-{{ istio_version }}/bin/istioctl create -f istio-tutorial/istiofiles/virtual-service-recommendation-v1_and_v2_50_50.yml -n tutorial || echo "Virtual Service already exists"

    - pause:
        prompt: |
          ======================================================
          SEM circuit breaking
          
          siege -r 2 -c 20 -v customer-tutorial.{{ minishift_ip.stdout }}.nip.io

          PRESS ENTER TO CONTINUE
          ======================================================

    - name: Criando regra de recommendation com circuit breaking
      shell: ./istio-{{ istio_version }}/bin/istioctl replace -f istio-tutorial/istiofiles/destination-rule-recommendation_cb_policy_version_v2.yml -n tutorial

    - name: Criando virtual service
      shell: ./istio-{{ istio_version }}/bin/istioctl get destinationrule -n tutorial

    - pause:
        prompt: |
          ======================================================
          COM circuit breaking
          
          siege -r 2 -c 20 -v customer-tutorial.{{ minishift_ip.stdout }}.nip.io

          PRESS ENTER TO CONTINUE
          ======================================================

    - name: Removendo virtual service
      shell: ./istio-{{ istio_version }}/bin/istioctl delete virtualservice recommendation -n tutorial

    - name: Removendo regra
      shell: ./istio-{{ istio_version }}/bin/istioctl delete -f istio-tutorial/istiofiles/destination-rule-recommendation_cb_policy_version_v2.yml -n tutorial

    - name: Clean-up
      shell: ./istio-tutorial/scripts/clean.sh


    - pause:
        prompt: |
          ======================================================
          Fault Injection - HTTP 503

          PRESS ENTER TO CONTINUE
          ======================================================

    - name: Criando destination rule
      shell: ./istio-{{ istio_version }}/bin/istioctl create -f istio-tutorial/istiofiles/destination-rule-recommendation.yml -n tutorial || echo "Destination rule already exists"

    - name: Criando virtual service 503
      shell: ./istio-{{ istio_version }}/bin/istioctl create -f istio-tutorial/istiofiles/virtual-service-recommendation-503.yml -n tutorial || echo "Virtual Service already exists"

    - pause:
        prompt: |
          ======================================================
          Now execute the following command: 
          
          curl customer-tutorial.{{ minishift_ip.stdout }}.nip.io

          PRESS ENTER TO CONTINUE
          ======================================================

    - name: Removendo virtual service 503
      shell: ./istio-{{ istio_version }}/bin/istioctl delete -f istio-tutorial/istiofiles/virtual-service-recommendation-503.yml -n tutorial

    - name: Clean-up
      shell: ./istio-tutorial/scripts/clean.sh



    




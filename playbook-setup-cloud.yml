---
- hosts: localhost
  name: "Setup da Demo do Istio no Openshift"
  connection: local
  vars:
    ocp_url: apps.brasilia1.openshiftworkshop.com
    master_url: master.brasilia1.openshiftworkshop.com

  tasks:

    - name: Abrindo console Openshift
      shell: open "https://{{ master_url }}"

    - name: Instalando crds.yaml
      shell: oc apply -f istio-1.0.0/install/kubernetes/helm/istio/templates/crds.yaml

    - name: Instalando istio-demo.yaml
      shell: oc apply -f istio-1.0.0/install/kubernetes/istio-demo.yaml

    - name: Abrindo projeto istio-system
      shell: oc project istio-system

    - name: Configurando Service Account projeto istio-system
      shell: oc adm policy add-scc-to-user anyuid -z default -n istio-system

    - name: Configurando Service Account projeto istio-system       
      shell: oc adm policy add-scc-to-user anyuid -z prometheus -n istio-system

    - name: Configurando Service Account projeto istio-system
      shell: oc adm policy add-scc-to-user anyuid -z istio-citadel-service-account -n istio-system

    - name: Configurando Service Account projeto istio-system
      shell: oc adm policy add-scc-to-user anyuid -z istio-cleanup-secrets-service-account -n istio-system

    - name: Configurando Service Account projeto istio-system
      shell: oc adm policy add-scc-to-user anyuid -z istio-egressgateway-service-account -n istio-system

    - name: Configurando Service Account projeto istio-system
      shell: oc adm policy add-scc-to-user anyuid -z istio-galley-service-account -n istio-system

    - name: Configurando Service Account projeto istio-system
      shell: oc adm policy add-scc-to-user anyuid -z istio-ingressgateway-service-account -n istio-system

    - name: Configurando Service Account projeto istio-system
      shell: oc adm policy add-scc-to-user anyuid -z istio-mixer-service-account -n istio-system

    - name: Configurando Service Account projeto istio-system
      shell: oc adm policy add-scc-to-user anyuid -z istio-grafana-post-install-account -n istio-system

    - name: Configurando Service Account projeto istio-system
      shell: oc adm policy add-scc-to-user anyuid -z istio-pilot-service-account -n istio-system

    - name: Configurando Service Account projeto istio-system
      shell: oc adm policy add-scc-to-user anyuid -z istio-sidecar-injector-service-account -n istio-system

    - name: Expondo svc istio-ingressgateway 
      shell: oc expose svc istio-ingressgateway

    - name: Expondo svc servicegraph
      shell: oc expose svc servicegraph

    - name: Expondo svc grafana
      shell: oc expose svc grafana

    - name: Expondo svc prometheus
      shell: oc expose svc prometheus

    - name: Expondo svc tracing
      shell: oc expose svc tracing

    - name: Aguardando containers do istio
      shell: oc get po | grep Running | wc -l
      register: istio_containers
      until: istio_containers.stdout.find("17") != -1
      retries: 60
      delay: 20

#    - name: Download do Istio for OSX
#      shell: curl -L https://github.com/istio/istio/releases/download/1.0.0/istio-1.0.0-osx.tar.gz | tar xz

    - name: New project tutorial
      shell: oc new-project tutorial

    - name: Policy anyuid
      shell: oc adm policy add-scc-to-user privileged -z default -n tutorial

    - name: Git clone istio-tutorial
      shell: git clone https://github.com/guaxinim/istio-tutorial

    - name: Iniciando build projeto Customer
      shell: oc new-app --name=customer --context-dir=customer/java/springboot -e JAEGER_SERVICE_NAME=customer JAEGER_ENDPOINT=http://jaeger-collector.istio-system.svc:14268/api/traces JAEGER_PROPAGATION=b3 JAEGER_SAMPLER_TYPE=const JAEGER_SAMPLER_PARAM=1 JAVA_OPTIONS='-Xms128m -Xmx256m -Djava.net.preferIPv4Stack=true' fabric8/s2i-java~https://github.com/guaxinim/istio-tutorial -o yaml  > customer.yml

#    - name: Exportando ISTIO_HOME
#      shell: export ISTIO_HOME=`pwd`/istio-1.0.0/bin

#    - name: Exportando PATH
#      shell: export PATH=$ISTIO_HOME/bin:$PATH

    - name: Criando objetos a partir do template Customer
      shell: ./istio-1.0.0/bin/istioctl kube-inject -f customer.yml | oc apply -f -

    - name: Expondo servico customer
      shell: oc delete svc/customer

    - name: Expondo servico customer
      shell: oc create -f istio-tutorial/customer/kubernetes/Service.yml

#    - name: Aguardando build do projeto Customer
#      shell: oc get po | grep -v build | grep Running
#      register: customer
#      until: customer.stdout.find("customer") != -1
#      retries: 30
#      delay: 30

    - name: Exponde servico customer
      shell: oc expose service customer

    - name: Iniciando build projeto Preference
      shell: oc new-app -l app=preference,version=v1 --name=preference-v1 --context-dir=preference/java/springboot -e JAEGER_SERVICE_NAME=preference JAEGER_ENDPOINT=http://jaeger-collector.istio-system.svc:14268/api/traces JAEGER_PROPAGATION=b3 JAEGER_SAMPLER_TYPE=const JAEGER_SAMPLER_PARAM=1 JAVA_OPTIONS='-Xms128m -Xmx256m -Djava.net.preferIPv4Stack=true' fabric8/s2i-java~https://github.com/guaxinim/istio-tutorial -o yaml  > preference.yml

    - name: Criando objetos a partir do template preference
      shell: ./istio-1.0.0/bin/istioctl kube-inject -f preference.yml | oc apply -f -

    - name: Expondo servico preference
      shell: oc delete svc/preference-v1

    - name: Expondo servico preference
      shell: oc create -f istio-tutorial/preference/kubernetes/Service.yml

#    - name: Aguardando build do projeto preference
#      shell: oc get po | grep -v build | grep Running
#      register: pref
#      until: pref.stdout.find("preference") != -1
#      retries: 30
#      delay: 30

    - name: Iniciando build projeto Recommendation
      shell: oc new-app -l app=recommendation,version=v1 --name=recommendation-v1 --context-dir=recommendation/java/vertx JAVA_OPTIONS='-Xms128m -Xmx256m -Djava.net.preferIPv4Stack=true' fabric8/s2i-java~https://github.com/guaxinim/istio-tutorial -o yaml  > recommendation.yml

    - name: Criando objetos a partir do template recommendation
      shell: ./istio-1.0.0/bin/istioctl kube-inject -f recommendation.yml | oc apply -f -

    - name: Expondo servico recommendation
      shell: oc delete svc/recommendation-v1

    - name: Expondo servico recommendation
      shell: oc create -f istio-tutorial/recommendation/kubernetes/Service.yml

#    - name: Aguardando build do projeto Recomendation
#      shell: oc get po | grep -v build | grep Running
#      register: recom
#      until: recom.stdout.find("recommendation") != -1
#      retries: 30
#      delay: 30

    - name: Testando projeto Customer
      shell: curl customer-tutorial.{{ ocp_url }}
      register: custtut
      until: custtut.stdout.find("UnknownHostException") != -1
      retries: 50
      delay: 10

    - name: Testando projeto Preference
      shell: curl customer-tutorial.{{ ocp_url }}
      register: custtut
      until: custtut.stdout.find("503 preference") != -1
      retries: 50
      delay: 10

    - name: Testando projeto Recommendation
      shell: curl customer-tutorial.{{ ocp_url }}
      register: rectut
      until: rectut.stdout.find("recommendation v1 from") != -1
      retries: 50
      delay: 10

    - name: Projeto istio-system
      shell: oc project istio-system

    - name: Criando kiali config-map
      shell: curl https://raw.githubusercontent.com/kiali/kiali/v0.7.2/deploy/openshift/kiali-configmap.yaml | VERSION_LABEL=v0.7.2 JAEGER_URL=https://jaeger-query-istio-system.{{ ocp_url }} GRAFANA_URL=https://grafana-istio-system.{{ ocp_url }} envsubst | oc create -n istio-system -f -

    - name: Criando kiali secrets
      shell: curl https://raw.githubusercontent.com/kiali/kiali/v0.7.2/deploy/openshift/kiali-secrets.yaml | VERSION_LABEL=v0.7.2 envsubst | oc create -n istio-system -f -

    - name: Criando kiali
      shell: "curl https://raw.githubusercontent.com/kiali/kiali/v0.7.2/deploy/openshift/kiali.yaml | VERSION_LABEL=v0.7.2 IMAGE_NAME=kiali/kiali IMAGE_VERSION=v0.7.2 NAMESPACE=istio-system VERBOSE_MODE=4 IMAGE_PULL_POLICY_TOKEN='imagePullPolicy: Always' envsubst | oc create -n istio-system -f - "

